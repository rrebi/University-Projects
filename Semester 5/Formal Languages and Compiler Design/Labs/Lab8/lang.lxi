%{
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>

    int lines = 1;
%}

%option noyywrap
%option caseless

DIGIT [0-9]
NON_ZERO_DIGIT [1-9]
INT_CONSTANT [+-]?{NON_ZERO_DIGIT}{DIGIT}*|0
LETTER [a-zA-Z_]
SPECIAL_CHAR [ _]
STRING_CONSTANT (\"({LETTER}|{DIGIT}|{SPECIAL_CHAR})*\")
IDENTIFIER {LETTER}({LETTER}|{DIGIT})*
BAD_IDENTIFIER ({DIGIT})+({LETTER})+({LETTER}|{DIGIT})*
BAD_CONST [+-]0|0{NON_ZERO_DIGIT}{DIGIT}*

%%

"var"|"int"|"str"|"read"|"print"|"if"|"else"|"do"|"while" {printf("%s - reserved word\n", yytext);}

"+"|"-"|"*"|"/"|"=="|"<"|">"|"<="|">="|"="|"!="|"%" printf("%s - operator\n", yytext);

{IDENTIFIER} {printf("%s - identifier\n", yytext);}

{BAD_IDENTIFIER} {printf("bad identifier at token %s at line %d \n", yytext, lines); exit(1);}


{INT_CONSTANT} {printf("%s - integer constant\n", yytext);}

{BAD_CONST} {printf("bad constant at token %s at line %d \n", yytext, lines); exit(1);}


{STRING_CONSTANT} {printf("%s - string constant\n", yytext);}

"["|"]"|";"|"("|")"|"{"|"}"|","|":" {printf("%s - separator\n", yytext);}

[ \t]+ {}

[\n]+ {++lines;}

. {printf("Error at token %s at line %d\n", yytext, lines); exit(1);}

%%

int main(int argc, char** argv) {
    if (argc > 1) {
        FILE *file;
        file = fopen(argv[1], "r");
        if (!file) {
            fprintf(stderr, "Could not open %s\n", argv[1]);
            exit(1);
        }
        yyin = file;
    }

    yylex();
    return 0;
}