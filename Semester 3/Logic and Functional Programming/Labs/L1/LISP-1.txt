;a)Write a function to return the union of two sets.

;removeFirstOccurance (l1 l2 .. ln, elem)
; = nil, if n = 0
; l2 l3 .. ln, if l1 = elem
; l1 U removeFirstOccurance(l2 l3.. ln, elem), otherwise

(defun removeFirstOccurance(l elem)
(cond
    ((null l) nil)
    ((equal (car l) elem) (removeFirstOccurance (cdr l) elem))
    (t (cons (car l) (removeFirstOccurance(cdr l) elem )))
)
)

;unionSets(l1 l2 ... ln, p1 p2 ... pm)
;= nil, if n=0 and m=0
;= l1 l2 .. ln, if m=0
;= p1 p2 .. pm, if n=0
;= l1 U (unionSets(l2 l3 ... ln, removeFirstOccurance(p1 p2 ... pm, l1))), othwrwise


(defun unionSets(l p)
(cond
    ((and (null l) (null p)) nil)
    ((null l) p)
    ((null p) l)
    (t (cons (car l) (unionSets (cdr l) (removeFirstOccurance p (car l)))))
)
)




;(write (removeFirstOccurance '(1 2 3 1 1 2 3) 2))


;(write (unionSets '(1 2 3) '(2 4 5)))


