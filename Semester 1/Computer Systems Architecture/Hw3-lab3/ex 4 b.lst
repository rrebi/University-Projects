     1                                  ; Write a program in the assembly language that computes the following arithmetic expression, considering the following data types for the variables:
     2                                  ; a - byte; b - word; c - double word; d - qword; - Unsigned representation
     3                                  ; (b + b) - c - (a + d)
     4                                  ; ex: a = 10; b = 90; c = 4; d = 80 => 180 - 4 - 90 = 86 
     5                                  
     6                                  bits 32 ;assembling for the 32 bits architecture
     7                                  ; the start label will be the entry point in the program
     8                                  global  start 
     9                                  
    10                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
    11                                  
    12                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    13                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    14                                  segment  data use32 class=data ; the data segment where the variables are declared 
    15 00000000 0A                      	a  db 10
    16 00000001 5A00                    	b  dw 90
    17 00000003 04000000                    c  dd 4
    18 00000007 5000000000000000            d  dq 80
    19 0000000F <res 00000008>              r resq 1 ;reserve 1 quadword in memory to save the result
    20                                      
    21                                  segment  code use32 class=code ; code segment
    22                                  start: 
    23 00000000 66A1[01000000]              mov AX, [b] ;AX = b
    24 00000006 660305[01000000]            add AX, [b] ;AX = b + b
    25 0000000D 98                          cwde ;converting AX to EAX
    26 0000000E 2B05[03000000]              sub EAX, [c] ;EAX = (b + b) - c
    27 00000014 99                          cdq
    28 00000015 89C3                        mov EBX, EAX
    29 00000017 89D1                        mov ECX, EDX
    30                                      
    31 00000019 A0[00000000]                mov AL, [a] ; AL = a
    32 0000001E 6698                        cbw
    33 00000020 6699                        cwd
    34 00000022 98                          cwde
    35 00000023 99                          cdq
    36 00000024 0305[07000000]              add EAX, dword [d]
    37 0000002A 1305[0B000000]              adc EAX, dword [d+4]; 
    38                                  
    39 00000030 F8                          clc ;clear carry flag
    40 00000031 29C3                        sub EBX, EAX ;ebx = ebx - eax
    41 00000033 19D1                        sbb ECX, EDX ;ecx = ecx - edx - cf
    42                                      
    43 00000035 A3[0F000000]                mov dword [r+0], eax 
    44 0000003A 8915[13000000]          	mov dword [r+4], edx 
    45                                      
    46 00000040 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    47 00000042 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution ofthe program
