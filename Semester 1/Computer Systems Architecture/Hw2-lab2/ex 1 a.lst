     1                                  ; Write a program in the assembly language that computes the following arithmetic expression, considering the following data types for the variables:
     2                                  ; a, b, c, d - byte
     3                                  ; c - (a + d) + (b + d)
     4                                  ; ex: a = 4; b = 3; c = 10; d = 2 => 10 - (4 + 2) + (3 + 2) = 10 - 6 + 5 = 9
     5                                  
     6                                  bits 32 ;assembling for the 32 bits architecture
     7                                  ; the start label will be the entry point in the program
     8                                  global  start 
     9                                  
    10                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
    11                                  
    12                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    13                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    14                                  segment  data use32 class=data ; the data segment where the variables are declared 
    15 00000000 04                      	a  db 4
    16 00000001 03                      	b  db 3
    17 00000002 0A                          c  db 10
    18 00000003 02                          d  db 2
    19                                  segment  code use32 class=code ; code segment
    20                                  start: 
    21 00000000 B000                        mov  AL, 0 ;AX = 0
    22 00000002 A0[00000000]            	mov  AL, [a] ;AX = a
    23 00000007 0205[03000000]              add  AL, [d] ;AX = AX + d = a + d
    24                                  
    25 0000000D 2805[02000000]              sub [c], AL  ;c = c - AX = c - (a + d)
    26                                      
    27 00000013 A0[01000000]                mov AL,  [b] ;AX = b
    28 00000018 0205[03000000]              add AL,  [d] ;AX = AX + d = b + d
    29                                      
    30 0000001E 0005[02000000]              add [c], AL  ;c = c + AX = c + (b + d) = c - (a + d) + (b + d)
    31                                  	
    32 00000024 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    33 00000026 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution ofthe program
