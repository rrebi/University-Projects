     1                                  ; Write a program in the assembly language that computes the following arithmetic expression, considering the following data types for the variables:
     2                                  ; a, b, c, d - word
     3                                  ; (c + b + a) - (d + d)
     4                                  ; ex: a = 1; b = 3; c = 4; d = 2 => (4 + 3 + 1) - (2 + 2) = 4
     5                                  
     6                                  bits 32 ;assembling for the 32 bits architecture
     7                                  ; the start label will be the entry point in the program
     8                                  global  start 
     9                                  
    10                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
    11                                  
    12                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    13                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    14                                  segment  data use32 class=data ; the data segment where the variables are declared 
    15 00000000 0A00                    	a  dw 10
    16 00000002 1E00                    	b  dw 30
    17 00000004 2800                        c  dw 40
    18 00000006 1400                        d  dw 20
    19                                  segment  code use32 class=code ; code segment
    20                                  start: 
    21 00000000 66B80000                    mov  AX, 0 ;AX = 0
    22 00000004 66A1[02000000]          	mov  AX, [b] ;AX = b
    23 0000000A 660105[04000000]            add  [c], AX ;c = c + AX = c + b
    24 00000011 66A1[00000000]              mov  AX, [a] ;AX = a
    25 00000017 660105[04000000]            add  [c], AX ;c = c + AX = c + b + a
    26                                      
    27 0000001E 66A1[06000000]              mov  AX, [d] ;AX = d
    28 00000024 660305[06000000]            add  AX, [d] ;AX = AX + d = d + d
    29                                      
    30 0000002B 662905[04000000]            sub [c], AX  ;c = c - AX = (c + b + a) - (d + d)
    31                                      
    32                                  	
    33 00000032 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    34 00000034 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution ofthe program
